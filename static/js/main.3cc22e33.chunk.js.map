{"version":3,"sources":["styles.js","spotifyComponent.js","playlists.js","sentiment.js","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","theme","body","backgroundImage","opacity","main","backgroundPosition","backgroundSize","margin","background","minHeight","width","display","flexDirection","alignItems","justifyContent","color","boxShadow","textBox","height","textShadow","input","fontFamily","fontSize","notchedOutline","borderColor","header","position","marginTop","top","backgroundColor","spotify","left","transform","spinner","SpotifyComponent","spotifyLink","classes","useStyles","className","title","src","frameBorder","allowtransparency","choosePlaylist","rawScore","score","Math","floor","playlist","imageLink","message","story","a","url","URL","sBody","jsonBody","JSON","stringify","sHeaders","Headers","append","req","Request","method","headers","mode","cache","fetch","res","json","resJson","polarity","result","getSentiment","App","useState","setStory","spotOn","setSpotOn","playlistimageLink","setPlaylist","useEffect","sentiment","pl","timeOutId","setTimeout","fetchSentiment","clearTimeout","id","style","Typography","variant","fontWeight","padding","borderRadius","TextField","onChange","e","target","value","label","placeholder","InputProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cc22e33.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles((theme) => ({\n  body: {\n    backgroundImage:\n      \"linear-gradient(rgb(0, 0, 0), rgb(40, 44, 52), rgb(36, 48, 156))\",\n    opacity: \"3.0\",\n  },\n  main: {\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    margin: \"auto\",\n    background: \"#282c34\",\n    minHeight: \"100vh\",\n    width: \"min(80vw, 900px)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"white\",\n    boxShadow: \"0px 0px 12px 10px rgba(255,255,255,0.8)\",\n  },\n  textBox: {\n    width: \"max(30%, 300px)\",\n    height: \"20%\",\n    margin: \"30px 20px\",\n    textShadow: \"2px\",\n  },\n  input: {\n    fontFamily: \"Permanent Marker\",\n    fontSize: \"1.5rem\",\n    color: \"white\",\n  },\n  notchedOutline: {\n    borderColor: \"white\",\n  },\n  header: {\n    position: \"absolute\",\n    marginTop: \"20px\",\n    top: \"10%\",\n    color: \"white\",\n    backgroundColor: \"black\",\n  },\n  spotify: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    width: \"min(500px, 100vw)\",\n    height: \"calc(50px + 40%)\",\n    opacity: \".85\",\n    boxShadow: \"0px 1px 10px 9px rgba(255,255,255,0.8)\",\n  },\n  spinner: {\n    position: \"absolute\",\n    left: \"60%\",\n    transform: \"translateX(-1000%)\",\n  },\n}));\n","// Sentiment -> choose song -> get spotify HTML\nimport useStyles from \"./styles\";\n\nconst SpotifyComponent = ({ spotifyLink }) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <iframe\n        className={classes.spotify}\n        title=\"spotify\"\n        src={spotifyLink}\n        frameBorder=\"0\"\n        allowtransparency=\"true\"\n\n        //allow=\"encrypted-media\"\n      ></iframe>\n    </div>\n  );\n};\nexport default SpotifyComponent;\n","// Choose a playlist from a mood score\nexport function choosePlaylist(rawScore) {\n  let score = Math.floor(rawScore * 2.5 + 3.5);\n  if (score > 5) score = 5;\n  let playlist = {\n    spotifyLink: \"\",\n    imageLink: \"\",\n    message: \"\",\n    color: \"\",\n  };\n\n  switch (score) {\n    case 1:\n      // Negative\n      playlist.color = \"rgb(0, 0, 0), rgb(255, 99, 71), rgb(0,0,0)\";\n      playlist.message = \"It'll be better tomorrow, here's a playlist for you.\";\n      playlist.spotifyLink =\n        \"https://open.spotify.com/embed/playlist/6tEHdC4ee1bkhjtoPKNhbm\";\n      playlist.imageLink =\n        \"https://i.pinimg.com/originals/46/09/23/460923f017d4f5019f28e6cdbae72dac.gif\";\n      break;\n    case 2:\n      // Neutrally Negative\n      playlist.color = \"rgb(0,0, 0), rgb(86,3,25), rgb(0,0, 0)\";\n      playlist.message = \"Rough day? Here, a playlist for you.\";\n\n      playlist.spotifyLink =\n        \"https://open.spotify.com/embed/user/spotify/playlist/37i9dQZF1DWVV27DiNWxkR\";\n      playlist.imageLink =\n        \"https://cdn-acpnj.nitrocdn.com/SDkrhncnWeetGsYGlzwaPnbfptfOeIKk/assets/static/optimized/rev-56afdb7/wp-content/uploads/2018/01/13-Sad-doctor-who-gif.gif\";\n      break;\n    case 3:\n      //mixed\n      playlist.color = \"rgb(0,0,0), rgb(255, 255, 255), rgb(0,0, 0)\";\n      playlist.message =\n        \"You've got this! Here is a playlist to boost your mood\";\n\n      playlist.spotifyLink =\n        \"https://open.spotify.com/embed/playlist/37i9dQZF1DX3rxVfibe1L0\";\n      playlist.imageLink =\n        \"https://c.tenor.com/F00W5rJTnokAAAAM/chris-paul-not-funny.gif\";\n      break;\n    case 4:\n      // casually happy\n      playlist.color = \"rgb(0,0,0), rgb(0,86,63), rgb(0,0, 0)\";\n      playlist.message = \"Keep smiling and listen to this playlist\";\n\n      playlist.spotifyLink =\n        \"https://open.spotify.com/embed/playlist/37i9dQZF1DX0UrRvztWcAU\";\n      playlist.imageLink =\n        \"https://media2.giphy.com/media/3o6vY59s91hWsxASYM/giphy.gif\";\n      break;\n    case 5:\n      // really happy\n      playlist.color = \"rgb(0,0,0), rgb(255,255,0), rgb(0,0,0)\";\n      playlist.message = \"Stay turnt up with this playlist selected for you\";\n\n      playlist.spotifyLink =\n        \"https://open.spotify.com/embed/playlist/37i9dQZF1DXdPec7aLTmlC\";\n      playlist.imageLink =\n        \"https://c.tenor.com/1rGPG7GkOVwAAAAC/beau-happy.gif\";\n      break;\n    default:\n      break;\n  }\n\n  return playlist;\n}\n","// User text -> google api -> sentiment numbers\n\nasync function getSentiment(story) {\n  const url = new URL(\"https://sentim-api.herokuapp.com/api/v1/\");\n\n  if (story === \"\") return null;\n\n  // prettier-ignore\n  let sBody = { \"text\": story };\n  let jsonBody = JSON.stringify(sBody);\n\n  let sHeaders = new Headers();\n  sHeaders.append(\"Accept\", \"application/json\");\n  sHeaders.append(\"Content-Type\", \"application/json\");\n\n  let init = {\n    method: \"POST\",\n    headers: sHeaders,\n    body: jsonBody,\n\n    mode: \"cors\",\n    cache: \"default\",\n  };\n\n  let req = new Request(url, init);\n\n  const res = await fetch(req);\n  const resJson = await res.json();\n  let polarity = resJson.result.polarity;\n  return polarity;\n}\nexport default getSentiment;\n","import { useState, useEffect } from \"react\";\nimport { Typography, TextField } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport SpotifyComponent from \"./spotifyComponent\";\nimport { choosePlaylist } from \"./playlists\";\nimport getSentiment from \"./sentiment\";\n\nfunction App() {\n  const classes = useStyles();\n  const [story, setStory] = useState(\"\");\n  const [spotOn, setSpotOn] = useState(false);\n  const [playlist, setPlaylist] = useState({\n    spotifyLink: \"\",\n    playlistimageLink: \"\",\n    message: \"Talk about your day.\",\n    color: \"rgb(0, 0, 0)\",\n  });\n\n  useEffect(() => {\n    async function fetchSentiment() {\n      let sentiment = await getSentiment(story);\n      let pl = await choosePlaylist(sentiment);\n      setPlaylist(pl);\n      setSpotOn(true);\n    }\n    if (story === \"\") {\n      setPlaylist({\n        spotifyLink: \"\",\n        playlistimageLink: \"\",\n        message: \"Talk about your day.\",\n        color: \"rgb(0, 0, 0)\",\n      });\n      setSpotOn(false);\n    } else {\n      const timeOutId = setTimeout(() => fetchSentiment(), 200);\n      return () => clearTimeout(timeOutId);\n    }\n  }, [story]);\n\n  return (\n    <div\n      id=\"body\"\n      className={classes.body}\n      style={{\n        backgroundImage: `linear-gradient(${playlist.color})`,\n      }}\n    >\n      <div\n        className={classes.main}\n        style={{\n          backgroundImage: `url(\"${playlist.imageLink}\")`,\n        }}\n      >\n        <Typography\n          variant=\"h4\"\n          className=\"header\"\n          style={{\n            position: \"absolute\",\n            top: \"17%\",\n            fontFamily: \"Zen Kurenaido\",\n            fontWeight: \"900\",\n            backgroundColor: \"rgba(40, 44, 52, 0.5)\",\n            padding: \"10px\",\n            borderRadius: \"10px\",\n          }}\n        >\n          {playlist.message === \"\" ? \"How was your day?\" : playlist.message}\n        </Typography>\n        <TextField\n          onChange={(e) => setStory(e.target.value)}\n          className={classes.textBox}\n          id=\"outlined-basic\"\n          label=\"\"\n          variant=\"outlined\"\n          placeholder=\"  Let the words flow..\"\n          style={{ position: \"absolute\", top: \"25%\", width: \"40%\" }}\n          InputProps={{\n            className: classes.input,\n            classes: {\n              notchedOutline: classes.notchedOutline,\n            },\n          }}\n        />\n\n        {spotOn ? (\n          <SpotifyComponent\n            spotifyLink={playlist.spotifyLink}\n            style={{\n              height: \"20%\",\n            }}\n          />\n        ) : (\n          <></>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}